#!/bin/bash

tempfile="$(mktemp)"
trap "rm $tempfile" EXIT

directories=("$@")
if [[ ${#directories[@]} == 0 ]]; then
    directories=(*)
fi

git_status_line() {
    git status --porcelain > $tempfile
    if [ -s $tempfile ]; then
        color_red
        echo -n Dirty
        color_reset
    else
        echo -n Clean
    fi
}

line() {
    printf '%-30s %-30s %-60s %-7s %-7s %-7s' "$1" "$2" "$3" "$6" "$5" "$4"
}

line_nl() {
    line "$@"
    echo
}

color_green() {
    echo -en "\033[32;1m"
}

color_red() {
    echo -en "\033[31;1m"
}

color_reset() {
    echo -en "\033[0m"
}

color_green
line Directory Branch Remote Status Behind Ahead
color_reset
echo

for dir in "${directories[@]}"; do
    if ! [ -d "$dir" ]; then
        # No such directory
        continue;
    fi

    pushd "$dir" > /dev/null

    if git rev-parse --git-dir &> /dev/null; then
        # Success - is a git repo
        branch="$(git branch | grep \* | sed 's/\* //' 2> /dev/null)"
        line_nl "$dir" "$branch" "$(git remote -v | head -1 | awk '{ printf $2; }')" "$(git_status_line)" $(git rev-list --left-right --count master..."$branch" 2> /dev/null)
    fi

    popd > /dev/null
done
